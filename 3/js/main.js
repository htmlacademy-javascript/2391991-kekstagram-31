/*
Структура каждого объекта должна быть следующей:

id, число — идентификатор опубликованной фотографии. Это число от 1 до 25. Идентификаторы не должны повторяться.

url, строка — адрес картинки вида photos/{{i}}.jpg, где {{i}} — это число от 1 до 25. Адреса картинок не должны повторяться.

description, строка — описание фотографии. Описание придумайте самостоятельно.

likes, число — количество лайков, поставленных фотографии. Случайное число от 15 до 200.

comments, массив объектов — список комментариев, оставленных другими пользователями к этой фотографии.
Количество комментариев к каждой фотографии — случайное число от 0 до 30.
Все комментарии генерируются случайным образом. Пример описания объекта с комментарием:

{
  id: 135,
  avatar: 'img/avatar-6.svg',
  message: 'В целом всё неплохо. Но не всё.',
  name: 'Артём',
}

У каждого комментария есть идентификатор — id — любое число. Идентификаторы не должны повторяться.

Поле avatar — это строка, значение которой формируется по правилу img/avatar-{{случайное число от 1 до 6}}.svg. Аватарки подготовлены в директории img.

Для формирования текста комментария — message — вам необходимо взять одно или два случайных предложения из представленных ниже:

Всё отлично!
В целом всё неплохо. Но не всё.
Когда вы делаете фотографию, хорошо бы убирать палец из кадра. В конце концов это просто непрофессионально.
Моя бабушка случайно чихнула с фотоаппаратом в руках и у неё получилась фотография лучше.
Я поскользнулся на банановой кожуре и уронил фотоаппарат на кота и у меня получилась фотография лучше.
Лица у людей на фотке перекошены, как будто их избивают. Как можно было поймать такой неудачный момент?!

Имена авторов также должны быть случайными. Набор имён для комментаторов составьте сами. Подставляйте случайное имя в поле name.

*/

// Массив описаний фотографий
const DESCRIPTIONS = [
  'Описание фотографии',
  'Описание фотографии для получения уникальности',
  'Третье описание фотографии',
  'Четвертое описание ',
  'А вот и пятое описание'
];

// Массив авторов комментариев
const NAMES = [
  'Alex',
  'Bob',
  'Bill',
  'Sven',
  'Jon',
  'Jim',
  'Andre',
  'Phil'
];

// Массив комментариев от авторов
const MESSAGES = [
  'Всё отлично!',
  'В целом всё неплохо. Но не всё.',
  'Когда вы делаете фотографию, хорошо бы убирать палец из кадра. В конце концов это просто непрофессионально.',
  'Моя бабушка случайно чихнула с фотоаппаратом в руках и у неё получилась фотография лучше.',
  'Я поскользнулся на банановой кожуре и уронил фотоаппарат на кота и у меня получилась фотография лучше.',
  'Лица у людей на фотке перекошены, как будто их избивают. Как можно было поймать такой неудачный момент?!',
];

// Создает id
const createId = (id) => function () {
  return ++id;
};

// Генерируем id для переменных
const generateId = createId (0);
const generateUrl = createId(0);
const generateMessage = createId(0);

// Создаем генератор случайных целых чисел
const getRandomInteger = (a, b) => {
  const lower = Math.ceil(Math.min(a, b));
  const upper = Math.floor(Math.max(a, b));
  const result = Math.random() * (upper - lower + 1) + lower;
  return Math.floor(result);
};

//  Создаем генератор случайных элементов
const getRandomElement = (elements) => elements[getRandomInteger(0, elements.length - 1)];

// Создаем комментарий
const createComment = () => ({
  id: getRandomInteger(generateMessage(), 200),
  avatar: `'img/avatar-${getRandomInteger(1,6)}.svg'`,
  message: getRandomElement(MESSAGES),
  name: getRandomElement(NAMES)
});


// Создаем пользователя
const createUsers = () => (
  {
    id: generateId(),
    url: `photos/${generateUrl()}.jpg`,
    description: getRandomElement(DESCRIPTIONS),
    likes: getRandomInteger(15,200),
    comments: Array.from({length: getRandomInteger(0,30)}, createComment)
  }
);

const similarUser = Array.from({length: 25}, createUsers);

// Данный вывод необходим для проверки
console.log(similarUser);
